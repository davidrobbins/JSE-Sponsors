/*** @author admin*//*	Here, we add the "onconnect" function to this worker (== to this .js file)	It's in this function that we receive messages from other threads, other workers,	asking us to do something*/function onconnect(msg) {	// In a SharedWorker, we get the communication port in evt.ports[0]    var thePort = msg.ports[0];        thePort.onmessage = function(messageEvt) {		//var sessionRef = currentSession(); // Get session.		//var promoteToken = sessionRef.promoteWith("Administrator"); //temporarily make this session Admin level.		// The message is in the "data" member of the argument		var message = messageEvt.data;       	// The caller is supposed to have set a "what" property, to tell us what		// he wants us to do. We dispatch the message and act accordingly.		// Notice that the caller can set more properties in messageEvt.				switch(message.what) {			case 'htmlEmailTest':			var username = 'jseverywhere2013'; // enter a valid account here			var password = 'davelylexiang';  // enter a valid password here			var address = 'smtp.gmail.com';			var port = 465;  // SSL port			var mail = require('waf-mail/mail');			var recip = "davidrobbins2011@gmail.com";			var mailMessage = new mail.Mail();			mailMessage.setBodyType("text/html");			mailMessage.from= username + '@gmail.com';			mailMessage.to=recip;			mailMessage.subject = "Wakanday Rules!";			mailMessage.setBody('<html><b>JS.everywhere 2013</b><br/>Just a test...<br/><br/></html>'); 			mailMessage.send(address, port , true, username, password);			break;		} //end - switch(message.what).		//sessionRef.unPromote(promoteToken); //put the session back to normal.	}; //end - hePort.onmessage = function(messageEvt)} //end - function onconnect(msg).