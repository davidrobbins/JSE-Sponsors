//Creating the Person classmodel.Person = new DataClass("People");//Add Sponsor attributes.model.Person.ID = new Attribute("storage", "uuid", "key auto");model.Person.firstName = new Attribute("storage", "string");model.Person.lastName = new Attribute("storage", "string", "btree");model.Person.fullName = new Attribute("calculated", "string");model.Person.email = new Attribute("storage", "string");model.Person.loginCode = new Attribute("storage", "string", "btree");model.Person.attendeeNumber = new Attribute("storage", "string");//login stuffmodel.Person.password = new Attribute("calculated", "string");model.Person.HA1Key = new Attribute("storage", "string", "btree");//Interest realation attr.model.Person.interestCollection = new Attribute("relatedEntities", "Interest", "person", {reversePath:true});//Calculated Attributes.model.Person.fullName.onGet = function() {	return this.firstName + " " + this.lastName; };model.Person.password.onGet = function() {	return "*****"; //could also return Null.};model.Person.password.onSet = function(value) {	this.HA1Key = directory.computeHA1(this.ID, value);};//Entity methods.model.Person.entityMethods = {};model.Person.entityMethods.validatePassword = function(password){	var ha1 = directory.computeHA1(this.ID, password);	return (ha1 === this.HA1Key); //true if validated, false otherwise.};